/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package TransmissionLines;

import javax.swing.JOptionPane;
import pack1.Complex;
/**
 *
 * @author shahe
 */
public class General extends javax.swing.JFrame {
    static double R, L, G, C, w, lambda, v, Z0, alpha, beta, yota1, yota2, len1, len2, Y0;
    static Complex yota, ZL, Zo;
    static String ans, line;
    /**
     * Creates new form General
     */
    public General() {
        initComponents();
        setLocationRelativeTo(rootPane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton15 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();

        jButton15.setText("BACK");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INPUT PARAMETERS");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 510, -1));

        jButton1.setText("Resistance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jButton2.setText("Inductance");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        jButton3.setText("Conductance");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        jButton4.setText("Capacitance");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        jButton5.setText("Velocity");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jButton6.setText("Wavelength");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, -1, -1));

        jButton7.setText("Frequency");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        jButton8.setText("Characteristic Impedance");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 160, -1));

        jButton9.setText("Attenuation Constant");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jButton10.setText("Phase Constant");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, -1));

        jButton11.setText("Propagation Constant");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        jButton12.setBackground(java.awt.Color.blue);
        jButton12.setText("CALCULATE");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        jButton13.setText("Line Length 1");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        jButton14.setText("Line Length 2");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        jButton16.setBackground(java.awt.Color.blue);
        jButton16.setText("BACK");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        jButton17.setBackground(java.awt.Color.blue);
        jButton17.setText("Other Parameters");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
R = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Resistance"));        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
L = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Inductance"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
G = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Conductance"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
C = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Capacitance"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
v = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Velocity"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
lambda = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Wavelength"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
w = 2*Math.PI*Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Resistance"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
Z0 = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Characteristic Impedance"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
alpha = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Attenuation Constant"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
beta = Double.parseDouble(JOptionPane.showInputDialog("Enter a value for Phase Constant"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
yota1 = Double.parseDouble(JOptionPane.showInputDialog("Enter a real value for Propagation Constant"));  
yota2 = Double.parseDouble(JOptionPane.showInputDialog("Enter an imaginary value for Propagation Constant"));

yota = new Complex(yota1, yota2);
JOptionPane.showMessageDialog(null, yota);// TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
ans = JOptionPane.showInputDialog("Enter 1 for lossy line, 2 for lossless line, 3 for distortionless line, 4 for other");

//lossless lines
if (ans.equalsIgnoreCase("2")){
   if (R==0 && G==0 && alpha==0 && beta==0 && yota1==0 && yota2==0 && lambda==0 && v==0 && Z0==0 && len1==len2 && w!=0){
    Z0 = Math.sqrt(L/C);
    beta = w*Math.sqrt(L*C);
    alpha = 0;
    yota1 = alpha;
    yota2 = beta;
    yota = new Complex(alpha, beta);
    v = w/beta;
    lambda = v/(w/(2*Math.PI));
    JOptionPane.showMessageDialog(null, line + "\n" + "Zo = " +Z0+"\n" + "beta = " +beta+ "\n alpha = " +alpha + "\n yota = " +yota+ "\n Velocity = " +v+ "\n Wavelength = "+lambda);
    } 
   else if (R==0 && G==0 && alpha==0 && yota1==0 && yota2==0 && lambda==0 && v==0 && len1==len2 && w!=0){
       C = beta/(w*Z0);
       L = Math.pow(Z0, 2) * C;
   }
   else if (R==0 && G==0 && alpha==0 && yota1==0 && yota2==0 && lambda==0 && v==0 && len1!=len2 && w!=0){
       if (len1 == 0 || len2 == 0){
           JOptionPane.showMessageDialog(null, "Please Enter both values");
       }
       else{
           JOptionPane.showMessageDialog(null, "This program assumes length 1 is inductance and length 2 is capacitance");
           double ratio;
           if (len1 > len2){
               ratio = len1/len2;
               C = C/ratio;
               JOptionPane.showMessageDialog(null, C);
           }
           else{
               ratio = len2 / len1;
               L = L*ratio;
               JOptionPane.showMessageDialog(null, L);
           }
       }
   }
}

//lossy lines
else if (ans.equalsIgnoreCase("1")){
    if (R!=0 && G!=0 && L!=0 && C!=0 && w!=0){
    Complex Zee;
    double A,B;
    Complex a = new Complex(R, w*L), b = new Complex(G, w*C);
    Zee = a.divides(b);
    A = Zee.abs(); B = Zee.Phase();
    A = Math.sqrt(A); B = B/2;
    
    Complex Yott;
    double D,F;
    Yott = a.times(b);
    D = Yott.abs(); F = Yott.Phase();
    D = Math.sqrt(D); F = F/2;
    alpha = D*Math.cos(F);
    beta = D*Math.sin(F);
    v = w/beta;
    lambda = v/(w/2*Math.PI);
    JOptionPane.showMessageDialog(null, "Z0="+A+"\n Phase angle="+B+"\n Yota="+D+"Phase angle="+F+"\n alpha="+alpha+"\n beta="+beta+"\n velocity="+v+"\n wavelenght="+lambda);
    }
    else if (R==0 && G==0 && L==0 && C==0 && Z0!=0 && !yota.equals(0) && w!=0){
        G = yota.re()/Z0;
        C = yota.im()/(w*Z0);
        R = Math.pow(Z0, 2) * G;
        L = Math.pow(Z0, 2) * C;
        JOptionPane.showMessageDialog(null, R+"\n"+G+"\n"+L+"\n"+C);
    }
    else if (Z0!=0 && R!=0 && L!=0 && G!=0 && w!=0){
        Complex num, denom, c, p1, p2, p3, m;
        double cReal, cImg, p3M, p3P;
        num = new Complex((R-(Math.pow(Z0,2)*G)), w*L);
        denom = new Complex(0, w*Math.pow(Z0, 2));
        c = num.divides(denom);
        C = c.abs();
        p1 = new Complex(R, w*L);
        p2 = new Complex(G, w*C);
        p3 = p1.times(p2);
        p3M = p3.abs();
        p3P = p3.Phase();
        yota1 = Math.sqrt(p3M);
        yota2 = p3P/2;
        alpha = yota1*Math.cos(yota2);//real 
        beta = yota1*Math.sin(yota2);//imginary
        m = new Complex(alpha, beta);//yota
        lambda = (2*Math.PI)/beta;
        v = (w/(2*Math.PI)) * lambda;
        Y0 = 1/Z0;
        JOptionPane.showMessageDialog(null, "yota="+m+"\n wavelenght="+lambda+"\n velocity="+v+"\n Admittance="+Y0);
    }
    else if (Z0!=0 && R!=0 && L!=0 && G!=0 && w!=0){
        Complex g,p1,p2,p3,m;
        double p3M, p3P;
        g = new Complex((R/Math.pow(Z0, 2)), w*(L-(Math.pow(Z0, 2)*C)));
        G = g.abs();
        p1 = new Complex(R, w*L);
        p2 = new Complex(G, w*C);
        p3 = p1.times(p2);
        p3M = p3.abs();
        p3P = p3.Phase();
        yota1 = Math.sqrt(p3M);
        yota2 = p3P/2;
        alpha = yota1*Math.cos(yota2);//real 
        beta = yota1*Math.sin(yota2);//imginary
        m = new Complex(alpha, beta);//yota
        lambda = (2*Math.PI)/beta;
        v = (w/(2*Math.PI)) * lambda;
        Y0 = 1/Z0;
        JOptionPane.showMessageDialog(null, "yota="+m+"\n wavelenght="+lambda+"\n velocity="+v+"\n Admittance="+Y0);
    }
    else if (Z0!=0 && R!=0 && L!=0 && G!=0 && w!=0){
        Complex num, denom, l, p1,p2,p3, m;
        double p3M, p3P;
        num = new Complex((Math.pow(Z0,2)*G - R), (Math.pow(Z0,2)*w*C));
        denom = new Complex(0, w);
        l = num.divides(denom);
        L = l.abs();
        p1 = new Complex(R, w*L);
        p2 = new Complex(G, w*C);
        p3 = p1.times(p2);
        p3M = p3.abs();
        p3P = p3.Phase();
        yota1 = Math.sqrt(p3M);
        yota2 = p3P/2;
        alpha = yota1*Math.cos(yota2);//real 
        beta = yota1*Math.sin(yota2);//imginary
        m = new Complex(alpha, beta);//yota
        lambda = (2*Math.PI)/beta;
        v = (w/(2*Math.PI)) * lambda;
        Y0 = 1/Z0;
        JOptionPane.showMessageDialog(null, "yota="+m+"\n wavelenght="+lambda+"\n velocity="+v+"\n Admittance="+Y0);
    }
    else if (Z0!=0 && L!=0 && G!=0 && C!=0 && w!=0){
        Complex one,two, three, m, r, p1, p2, p3;
        double p3M, p3P;
        one = new Complex(G, w*C); two = new Complex(0, w*L); three = new Complex(Math.pow(Z0, 2) ,0);
        r = one.times(three).minus(two);
        R = r.abs();
        p1 = new Complex(R, w*L);
        p2 = new Complex(G, w*C);
        p3 = p1.times(p2);
        p3M = p3.abs();
        p3P = p3.Phase();
        yota1 = Math.sqrt(p3M);
        yota2 = p3P/2;
        alpha = yota1*Math.cos(yota2);//real 
        beta = yota1*Math.sin(yota2);//imginary
        m = new Complex(alpha, beta);//yota
        lambda = (2*Math.PI)/beta;
        v = (w/(2*Math.PI)) * lambda;
        Y0 = 1/Z0;
        JOptionPane.showMessageDialog(null, "yota="+m+"\n wavelenght="+lambda+"\n velocity="+v+"\n Admittance="+Y0);
    }
    else if (!yota.equals(0) && Z0!=0 && w!=0){
        alpha = yota.re();
        beta = yota.im();
        G = alpha/Z0;
        C = beta/(w*Z0);
        R = G * Math.pow(Z0, 2);
        L = C * Math.pow(Z0, 2);
        Y0 = 1/Z0;
        lambda = (2*Math.PI) / beta;
        v = (w/(2*Math.PI)) * lambda;
        JOptionPane.showMessageDialog(null, "G="+G+"\n C="+C+"\n R="+R+"\n L="+L+"\n Admittance="+Y0+"\n wavelenght="+lambda+"\n velocity="+v);
    }
    else{
        JOptionPane.showMessageDialog(null, "Cannot Compute!");
    }
}

//distortionless lines
else if (ans.equalsIgnoreCase("3")){
    if (Z0!=0 && alpha!=0 && v!=0 && w!=0){
        beta = w/v;
        G = alpha/Z0;
        R = Math.pow(Z0, 2) * G;
        C = beta/(w*Z0);
        L = Math.pow(Z0, 2) * C;
         JOptionPane.showMessageDialog(null, beta+"\n"+R+"\n"+G+"\n"+L+"\n"+C);
    }
    else if (!yota.equals(0) && Z0!=0 && w!=0){
        alpha = yota.re(); beta = yota.im();
        G = alpha/Z0;
        R = Math.pow(Z0, 2) * G;
        C = beta/(w*Z0);
        L = Math.pow(Z0, 2) * C;
        JOptionPane.showMessageDialog(null, beta+"\n"+R+"\n"+G+"\n"+L+"\n"+C);
    } 
}

//other lines
else if (ans.equalsIgnoreCase("4")){
     if (R!=0 && G!=0 && L!=0 && C!=0 && w!=0){
    Complex Zee;
    double A,B;
    Complex a = new Complex(R, w*L), b = new Complex(G, w*C);
    Zee = a.divides(b);
    A = Zee.abs(); B = Zee.Phase();
    A = Math.sqrt(A); B = B/2;
    
    Complex Yott;
    double D,F;
    Yott = a.times(b);
    D = Yott.abs(); F = Yott.Phase();
    D = Math.sqrt(D); F = F/2;
    Complex.fromPolar(D, F);
    alpha = D*Math.cos(F);
    beta = D*Math.sin(F);
    v = w/beta;
    lambda = v/(w/2*Math.PI);
    JOptionPane.showMessageDialog(null, "Impedance="+A+"\n Phase Angle="+B+"\n yota="+D+"\n Phase Angle="+F+"\n alpha="+alpha+"\n beta="+beta+"\n velocity="+v+"\n wavelength="+lambda);
    }
    else if (R==0 && G==0 && L==0 && C==0 && Z0!=0 && !yota.equals(0) && w!=0){
        G = yota.re()/Z0;
        C = yota.im()/(w*Z0);
        R = Math.pow(Z0, 2) * G;
        L = Math.pow(Z0, 2) * C;
        JOptionPane.showMessageDialog(null, R+"\n"+G+"\n"+L+"\n"+C);
    }
}
else{
    JOptionPane.showMessageDialog(null, "Cannot Compute!");
}
// TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
len1 = Double.parseDouble(JOptionPane.showInputDialog("Enter the first line length"));        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
len2 = Double.parseDouble(JOptionPane.showInputDialog("Enter the second line length"));         // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        this.dispose();
        new ChoiceOfLine().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        this.dispose();
        new ChoiceOfLine().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
this.dispose();
new OtherParam().setVisible(true);


// TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new General().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
